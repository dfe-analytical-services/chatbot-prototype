# Run when commits are pushed to mainline branch
trigger:
  - main
pr: none

parameters:
- name: provisionInfrastructure
  displayName: 'Provision infrastructure resources?'
  type: boolean
  default: true
- name: deployRoleAssignments
  displayName: 'Deploy role assignments during infrastructure provision?'
  type: boolean
  default: false
- name: deployServices
  displayName: 'Deploy all application services?'
  type: boolean
  default: true

jobs:
- deployment: All
  displayName: All
  pool:
    vmImage: ubuntu-latest
  environment: 'supportbot-dev'
  container: mcr.microsoft.com/azure-dev-cli-apps:latest
  strategy:
    runOnce:
      deploy:
        steps:
          - checkout: self
          - pwsh: |
              azd config set auth.useAzCliAuth "true"
            displayName: Configure AZD to use Azure CLI authentication
          - task: AzureCLI@2
            displayName: Refresh environment if not re-provisioning infrastructure
            condition: ${{ not(parameters.provisionInfrastructure) }}
            inputs:
              azureSubscription: $(SERVICE_CONNECTION_NAME)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                azd env refresh --no-prompt
            env:
              AZURE_ENV_NAME: $(Environment.Name)
              DEPLOY_ROLE_ASSIGNMENTS: ${{ parameters.deployRoleAssignments }}
          - task: AzureCLI@2
            displayName: Provision infrastructure
            condition: ${{ parameters.provisionInfrastructure }}
            inputs:
              azureSubscription: $(SERVICE_CONNECTION_NAME)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                azd provision --no-prompt --preview
                azd provision --no-prompt
            env:
              AZURE_ENV_NAME: $(Environment.Name)
              DEPLOY_ROLE_ASSIGNMENTS: ${{ parameters.deployRoleAssignments }}
          - task: AzureCLI@2
            displayName: Deploy all services
            condition: ${{ parameters.deployServices }}
            inputs:
              azureSubscription: $(SERVICE_CONNECTION_NAME)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                azd deploy --no-prompt --all
            env:
              AZURE_ENV_NAME: $(Environment.Name)
              DEPLOY_ROLE_ASSIGNMENTS: ${{ parameters.deployRoleAssignments }}
              NEXT_PUBLIC_BUILD_NUMBER: $(Build.BuildNumber)
